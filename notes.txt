Plan:

1. Create 2d Voronoi

        a)  Complete Delaunay triangulation // Not necessary

            for each triangle in triangulation // done inserting points, now clean up
                if triangle contains a vertex from original super-triangle
                    remove triangle from triangulation
            return triangulation

        b) Delaunay -> Voronoi 
            i. So, the edges of the Voronoi diagram are along the perpendicular bisectors of the edges of the Delaunay triangulation, so compute those lines.
            ii. Then, compute the vertices of the Voronoi diagram by finding the intersections of adjacent edges.
            iii. Finally, the edges are then the subsets of the lines you computed which lie between the corresponding vertices.
        
        c) Fix animation

2. Create 3d Voronoi:

    a) Find a new dataset or convert existing dataset to 3d (by adding altitudes)
    b) Check το pdf: Real-time Cave Destruction Using 3D Voronoi στα Other implementations
    c) Κώδικας που αντιστοιχεί στο παραπάνω paper -> https://bitbucket.org/Marko_T/real-timecavedestructionusing3dvoronoi/src/master/

3. Technical Report - Presentation

    a) Να γράψουμε την αναφορά
    b) Προετοιμασία για παρουσίαση

------------------------------------------------------------------------------------

Tasks:

Mitsakos -> Delaunay + Voronoi
Sfatidis -> Delaunay + Voronoi
Stefanos -> Αναφορά + 3D
Kostas -> Delaunay + Voronoi

New meeting: 12-13/1 